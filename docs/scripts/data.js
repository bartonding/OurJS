var apiData = {"Array.prototype.lastIndexOf":{"requires":[],"parameters":[{"description":"指定的值。","type":"*","name":"searchElement","isOptional":false},{"description":"在数组中的指定索引开始查找，默认为数组的长度。<br>如果指定的值大于等于数组的长度，则仍使用数组的长度。<br>如果指定一个负数，则表示从数组的末尾开始计算的偏移量，即使用 (fromIndex + 数组的长度) 作为查找起始点，如果这个结果仍为负数，则使用 0 作为最终结果。","type":"number","name":"fromIndex","isOptional":true}],"isStatic":false,"description":"返回数组中最后一次出现指定的值的索引。","isConstructor":false,"returns":[{"type":"number","description":"索引值，如果数组中不包含指定的值，则返回 -1。"}],"type":"number","since":"","see":["http://es5.github.com/#x15.4.4.15","https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/lastIndexOf"],"fires":[],"deprecated":"","examples":["[1, 2, 3, 2, 1].lastIndexOf(2);\r// 3\r[1, 2, 3, 2, 1].lastIndexOf(2, 2);\r// 1\r[1, 2, 3, 2, 1].lastIndexOf(2, -3)\r// 1\r[1, 2, 3, 2, 1].lastIndexOf(8)\r// -1"],"isFunction":true,"name":"Array.prototype.lastIndexOf"},"Element.prototype.getPrevious":{"requires":[],"parameters":[],"isStatic":false,"description":"获取与本元素相邻的上一个元素。","isConstructor":false,"returns":[{"type":"Element","description":"与本元素相邻的上一个元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getPrevious"},"navigator.isIE10":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 IE10。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isIE10"},"Calendar.prototype.getElement":{"requires":[],"parameters":[],"isStatic":false,"description":"获取日历的容器元素，以便选择插入 DOM 树的位置。","isConstructor":false,"returns":[{"type":"Element","description":"日历的容器元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Calendar.prototype.getElement"},"Number.isNaN":{"requires":[],"parameters":[{"description":"提供的值。","type":"*","name":"value","isOptional":false}],"isStatic":true,"description":"检查提供的值是否为非数字。","isConstructor":false,"returns":[{"type":"boolean","description":"检查结果。"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:number.isnan"],"fires":[],"deprecated":"","examples":["isNaN(undefined);\r// true\rNumber.isNaN(undefined);\r// false"],"isFunction":true,"name":"Number.isNaN"},"RegExp.escape":{"requires":[],"parameters":[{"description":"要编码的字符串。","type":"string","name":"string","isOptional":false}],"isStatic":true,"description":"为字符串编码，避免创建正则表达式时破坏预期的结构。","isConstructor":false,"returns":[{"type":"string","description":"编码后的字符串。"}],"type":"string","since":"","see":["http://prototypejs.org/"],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"RegExp.escape"},"Pagination.options":{"requires":[],"parameters":[],"isStatic":true,"description":"默认选项。<br>可选参数对象，包含的属性及其默认值为：<br><table><tr><th>edgeEntries</th><td>1</td></tr><tr><th>sideEntries</th><td>2</td></tr><tr><th>prevText</th><td>'上一页'</td></tr><tr><th>nextText</th><td>'下一页'</td></tr><tr><th>currentClassName</th><td>'current'</td></tr><tr><th>disabledClassName</th><td>'disabled'</td></tr></table>","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Pagination.options"},"Element.prototype.replace":{"requires":[],"parameters":[{"description":"目标元素。","type":"Element","name":"target","isOptional":false},{"description":"是否保留目标元素及后代元素上绑定的所有事件监听器。","type":"boolean","name":"keepListeners","isOptional":true}],"isStatic":false,"description":"使用本元素替换目标元素。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.replace"},"Switcher.prototype.getActiveItem":{"requires":[],"parameters":[],"isStatic":false,"description":"获取当前标记为“活动”的元素。","isConstructor":false,"returns":[{"type":"Object","description":"当前标记为“活动”的元素，如果为 null，则当前无活动元素。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Switcher.prototype.getActiveItem"},"Object":{"requires":[],"parameters":[],"isStatic":true,"description":"","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Object"},"Element.prototype.highlight":{"requires":[],"parameters":[{"description":"动画选项。","type":"Object","name":"options","isOptional":true},{"description":"高亮颜色，默认为 yellow。","type":"string","name":"options.color","isOptional":false},{"description":"高亮次数，默认为 2。","type":"number","name":"options.times","isOptional":false},{"description":"播放时间，单位是毫秒，默认为 500。","type":"number","name":"options.duration","isOptional":false},{"description":"播放完成后的回调。","type":"Function","name":"options.callback","isOptional":false}],"isStatic":false,"description":"在本元素的动画队列中添加一个高亮效果。<br>调用本方法时，如果当前队列的前一个动画也是高亮动画，则丢弃当前的高亮动画。若此时本元素正在播放一个高亮动画，则重新播放该动画。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.highlight"},"Global":{"requires":[],"parameters":[],"isStatic":true,"description":"全局对象。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Global"},"Event.prototype.preventDefault":{"requires":[],"parameters":[],"isStatic":false,"description":"阻止事件的默认行为。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Event.prototype.preventDefault"},"window.fire":{"requires":[],"parameters":[{"description":"事件类型。","type":"String","name":"type","isOptional":false},{"description":"在事件对象上附加的数据。","type":"Object","name":"data","isOptional":true}],"isStatic":true,"description":"触发 window 的某类事件，运行相关的事件监听器。","isConstructor":false,"returns":[{"type":"Object","description":"window 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"window.fire"},"Event.prototype.pageX":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标在页面中的 X 坐标，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.pageX"},"Event.prototype.pageY":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标在页面中的 Y 坐标，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.pageY"},"Element.prototype.setStyle":{"requires":[],"parameters":[{"description":"特性名，支持 camel case 和 hyphenate 格式。","type":"string","name":"propertyName","isOptional":false},{"description":"特性值，若为数字，则为期望长度单位的特性值自动添加长度单位 'px'。","type":"number|string","name":"propertyValue","isOptional":false}],"isStatic":false,"description":"为本元素设置一条行内样式声明。<br>注意：<br>如果设置的是长度值，若长度单位不是 'px' 则不能省略长度单位。<br>可以设置复合属性的值。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.setStyle"},"Dialog.prototype.adjust":{"requires":[],"parameters":[],"isStatic":false,"description":"调整对话框位置。","isConstructor":false,"returns":[{"type":"Object","description":"Dialog 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Dialog.prototype.adjust"},"Element.prototype.find":{"requires":[],"parameters":[{"description":"选择符。","type":"string","name":"selector","isOptional":false}],"isStatic":false,"description":"在本元素的后代元素中，根据指定的选择符查找元素。<br>本功能使用 Sizzle 实现，关于可以使用的 selector 信息，请参考 Sizzle 的相关说明。","isConstructor":false,"returns":[{"type":"Array","description":"包含查找到的元素的数组。"}],"type":"Array","since":"","see":["https://github.com/jquery/sizzle/wiki/Sizzle-Home"],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.find"},"Boolean.prototype.toJSON":{"requires":[],"parameters":[],"isStatic":false,"description":"将布尔值转换为 JSON 格式的字符串。","isConstructor":false,"returns":[{"type":"string","description":"转换后的字符串。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Boolean.prototype.toJSON"},"localStorage.removeItem":{"requires":[],"parameters":[{"description":"要删除的数据名，不能为空字符串。","type":"string","name":"key","isOptional":false}],"isStatic":true,"description":"删除数据。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"localStorage.removeItem"},"Element.prototype.outerHTML":{"requires":[],"parameters":[],"isStatic":false,"description":"获取/设置本元素（包含后代节点在内）的序列化字符串。<br>注意：<br>getter 在处理空标签及特殊字符时，各浏览器行为不一致。","isConstructor":false,"returns":[],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Element.prototype.outerHTML"},"Number.isFinite":{"requires":[],"parameters":[{"description":"提供的值。","type":"*","name":"value","isOptional":false}],"isStatic":true,"description":"检查提供的值是否为有限的数字。","isConstructor":false,"returns":[{"type":"boolean","description":"检查结果。"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:number.isfinite"],"fires":[],"deprecated":"","examples":["isFinite(null);\r// true\rNumber.isFinite(null);\r// false"],"isFunction":true,"name":"Number.isFinite"},"String.prototype.trim":{"requires":[],"parameters":[],"isStatic":false,"description":"删除字符串两端的空白符。","isConstructor":false,"returns":[{"type":"string","description":"删除两端的空白符后的字符串。"}],"type":"string","since":"","see":["http://blog.stevenlevithan.com/archives/faster-trim-javascript","http://es5.github.com/#x15.5.4.20"],"fires":[],"deprecated":"","examples":["'  hello '.trim();\r// 'hello'"],"isFunction":true,"name":"String.prototype.trim"},"window.off":{"requires":[],"parameters":[{"description":"通过 on 添加监听器时使用的事件名称。可以使用空格分割多个事件名称。","type":"string","name":"name","isOptional":false}],"isStatic":true,"description":"根据名称删除 window 上已添加的事件监听器。","isConstructor":false,"returns":[{"type":"Object","description":"window 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"window.off"},"Element.prototype.hasClass":{"requires":[],"parameters":[{"description":"类名。","type":"string","name":"className","isOptional":false}],"isStatic":false,"description":"判断本元素是否有指定的类名。","isConstructor":false,"returns":[{"type":"boolean","description":"本元素是否有指定的类名。"}],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.hasClass"},"Element.prototype.contains":{"requires":[],"parameters":[{"description":"目标元素。","type":"Element","name":"target","isOptional":false}],"isStatic":false,"description":"判断本元素是否包含目标元素。<br>注意，如果本元素和目标元素一致，本方法也将返回 true。","isConstructor":false,"returns":[{"type":"boolean","description":"判断结果。"}],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.contains"},"Pagination.prototype.render":{"requires":[],"parameters":[{"description":"当前页。","type":"number","name":"currentPage","isOptional":false},{"description":"总页数。","type":"number","name":"totalPage","isOptional":false}],"isStatic":false,"description":"根据当前页和总页数渲染分页导航条。","isConstructor":false,"returns":[{"type":"Object","description":"Pagination 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Pagination.prototype.render"},"Global.execScript":{"requires":[],"parameters":[{"description":"要执行的代码。","type":"string","name":"code","isOptional":false}],"isStatic":true,"description":"将字符串作为脚本执行，执行时的作用域为全局作用域。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":["var a;\rexecScript('a = 128 * 2 + 256;');\ra;\r// 512"],"isFunction":true,"name":"Global.execScript"},"navigator.isIE6":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 IE6。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isIE6"},"navigator.isIE7":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 IE7。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isIE7"},"Element.prototype.getNext":{"requires":[],"parameters":[],"isStatic":false,"description":"获取与本元素相邻的下一个元素。","isConstructor":false,"returns":[{"type":"Element","description":"与本元素相邻的下一个元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getNext"},"navigator.isIE8":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 IE8。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isIE8"},"navigator.isIE9":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 IE9。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isIE9"},"RegExp":{"requires":[],"parameters":[],"isStatic":true,"description":"","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"RegExp"},"document.$":{"requires":[],"parameters":[{"description":"不同类型的元素表示。","type":"string|Element","name":"e","isOptional":false}],"isStatic":true,"description":"根据指定的参数获取/创建一个元素，并对其进行扩展。<br>当参数为一个元素的序列化之后的字符串（它可以包含子元素）时，会返回扩展后的、根据这个字符串反序列化的元素。<br>这里与其他实现相比有以下几点差异：<br><ul><li>忽略“IE 丢失源代码前的空格”的问题，通过脚本修复这个问题无实际意义（需要深度遍历）。</li><li>修改“IE 添加多余的 tbody 元素”的问题的解决方案，在 wrappers 里预置一个 tbody 即可。</li><li>忽略“脚本不会在动态创建并插入文档树后自动执行”的问题，因为这个处理需要封装 appendChild 等方法，并且还需要考虑脚本的 defer 属性在各浏览器的差异（IE 中添加 defer 属性的脚本在插入文档树后会执行），对于动态载入外部脚本文件的需求，会提供专门的方法，不应该使用本方法。</li></ul>在创建元素时，如果包含 table，建议写上 tbody 以确保结构严谨。举例如下：<br>$('&lt;div&gt;&lt;table&gt;&lt;tbody id=\"ranking\"&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;');<br>当参数为一个元素的 id 时，会返回扩展后的、与指定 id 相匹配的元素。<br>当参数本身即为一个元素时，会返回扩展后的该元素。<br>当参数为其他情况时（包括 document 和 window）均返回 null。","isConstructor":false,"returns":[{"type":"Element","description":"扩展后的元素。"}],"type":"Element","since":"","see":["http://jquery.com/","http://mootools.net/","http://w3help.org/zh-cn/causes/SD9003"],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"document.$"},"Fx.Fade":{"requires":[],"parameters":[{"description":"要实施渐隐效果的元素。","type":"Element","name":"$element","isOptional":false},{"description":"渐隐模式，in 为渐入，out 为渐出。","type":"string","name":"mode","isOptional":false},{"description":"延时。","type":"number","name":"delay","isOptional":false},{"description":"播放时间。","type":"number","name":"duration","isOptional":false},{"description":"控速函数名称或表达式。","type":"string","name":"timingFunction","isOptional":false}],"isStatic":true,"description":"渐隐效果。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Fx.Fade"},"TabPanel.options":{"requires":[],"parameters":[],"isStatic":true,"description":"默认选项。<br>可选参数对象，包含的属性及其默认值为：<br><table><tr><th>activeClassName</th><td>'active'</td></tr><tr><th>tabsContainer</th><td>undefined</td></tr><tr><th>hoverDelay</th><td>0</td></tr></table>","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"TabPanel.options"},"localStorage":{"requires":[],"parameters":[],"isStatic":true,"description":"为不支持 localStorage 的浏览器提供类似的功能。<br>注意：<br>在不支持 localStorage 的浏览器中，会使用路径 '/favicon.ico' 来创建启用 userData 的元素。<br>当上述路径不存在时 (404)，服务端应避免返回包含脚本的页面，以免出现预料外的异常。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"localStorage"},"Global.typeOf":{"requires":[],"parameters":[{"description":"要判断的值。","type":"*","name":"value","isOptional":false}],"isStatic":true,"description":"判断提供的值的数据类型，比 typeof 运算符返回的结果更明确（将对结果为 'object' 的情况进行更细致的区分）。<br>注意：<br>一些特殊的对象，如 IE7 IE8 中的 XMLHttpRequest，是作为构造函数使用的，但使用本方法将得到 'object.Object' 的结果。考虑到需要判断这类对象的情况极为少见，因此未作处理。<br>IE6 IE7 IE8 中在试图访问某些对象提供的属性/方法时，如 new ActiveXObject('Microsoft.XMLHTTP').abort，将抛出“对象不支持此属性或方法”的异常，因此也无法使用本方法对其进行判断。但可以对其使用 typeof 运算符并得到结果 'unknown'。","isConstructor":false,"returns":[{"type":"string","description":"值的类型，可能为以下几种情况之一：<br>undefined<br>boolean<br>number<br>string<br>function<br>null<br>object.Boolean<br>object.Number<br>object.String<br>object.Array<br>object.Date<br>object.RegExp<br>object.Error<br>object.Math<br>object.JSON<br>object.Arguments<br>object.Global<br>object.Node<br>object.Collection<br>object.Object"}],"type":"string","since":"","see":["http://mootools.net/","http://jquery.com/"],"fires":[],"deprecated":"","examples":["typeOf(document);\r// 'object.Node'"],"isFunction":true,"name":"Global.typeOf"},"Element.prototype.setData":{"requires":[],"parameters":[{"description":"数据的名称，必须为 camelCase 形式，并且只能包含英文字母。","type":"string","name":"name","isOptional":false},{"description":"数据的值，必须为字符串。","type":"string","name":"value","isOptional":false}],"isStatic":false,"description":"设置本元素附加的自定义数据。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.setData"},"Event.prototype.isMouseEvent":{"requires":[],"parameters":[],"isStatic":false,"description":"是否为鼠标事件。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.isMouseEvent"},"Element.prototype.getChildren":{"requires":[],"parameters":[],"isStatic":false,"description":"获取本元素的所有子元素。","isConstructor":false,"returns":[{"type":"Array","description":"包含本元素的所有子元素的数组，数组内各元素的顺序为执行本方法时各元素在文档树中的顺序。"}],"type":"Array","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getChildren"},"Event.prototype.offsetX":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标在横向移动的偏移量，仅在 mousedragstart/mousedrag/mousedragend 类型的事件对象上有效。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.offsetX"},"Event.prototype.timeStamp":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生的时间。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.timeStamp"},"Element.prototype.putAfter":{"requires":[],"parameters":[{"description":"目标元素。","type":"Element","name":"target","isOptional":false}],"isStatic":false,"description":"将本元素放到目标元素之后。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.putAfter"},"Event.prototype.offsetY":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标在纵向移动的偏移量，仅在 mousedragstart/mousedrag/mousedragend 类型的事件对象上有效。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.offsetY"},"Element.prototype.addClass":{"requires":[],"parameters":[{"description":"类名。","type":"string","name":"className","isOptional":false}],"isStatic":false,"description":"为本元素添加一个类名。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.addClass"},"Array.prototype.getFirst":{"requires":[],"parameters":[],"isStatic":false,"description":"获取本数组的第一个元素。","isConstructor":false,"returns":[{"type":"*","description":"本数组的第一个元素。"}],"type":"*","since":"","see":[],"fires":[],"deprecated":"","examples":["[0, 1, 2, 3, 4].getFirst();\r// 0"],"isFunction":true,"name":"Array.prototype.getFirst"},"Event.prototype.target":{"requires":[],"parameters":[],"isStatic":false,"description":"触发事件的对象。","isConstructor":false,"returns":[],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.target"},"localStorage.setItem":{"requires":[],"parameters":[{"description":"要保存的数据名，不能为空字符串。","type":"string","name":"key","isOptional":false},{"description":"要保存的数据值。","type":"string","name":"value","isOptional":false}],"isStatic":true,"description":"保存数据。<br>注意：<br>与源生的 localStorage 不同，IE6 IE7 的实现不允许 `~!@#$%^&*() 等符号出现在 key 中，可以使用 . 和 _ 符号，但不能以 . 和数字开头。<br>可以使用中文 key。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"localStorage.setItem"},"Dialog":{"requires":[],"parameters":[{"description":"要作为对话框显示的元素。","type":"Element","name":"element","isOptional":false},{"description":"可选参数，这些参数的默认值保存在 Dialog.options 中。","type":"Object","name":"options","isOptional":true},{"description":"为遮掩层元素附加的属性。","type":"Object","name":"options.maskAttributes","isOptional":false},{"description":"为遮掩层元素设置的样式。","type":"Object","name":"options.maskStyles","isOptional":false},{"description":"对话框的左边与其父元素的左边的横向差值。默认为 NaN，此时对话框的中心点在横向将与其父元素的中心点重合。","type":"number","name":"options.offsetX","isOptional":false},{"description":"对话框的顶边与其父元素的顶边的纵向差值。默认为 NaN，此时对话框的中心点在纵向将与其父元素的中心点重合。","type":"number","name":"options.offsetY","isOptional":false},{"description":"是否启用动画效果。在 IE6 下将无视此选项，强行禁用动画效果，以避免和 PNG 透明修复脚本冲突。","type":"boolean","name":"options.effect","isOptional":false}],"isStatic":true,"description":"模态对话框。<br>对话框的弹出位置、遮掩层遮盖的范围都是与对话框的父元素有关的。<br>对话框元素将以其父元素为“参考元素”进行定位，遮掩层也作为其父元素的子元素被创建。<br>如果对话框元素的父元素是 body，遮掩层将遮掩整个视口。<br>当对话框元素的父元素不是 body 时，应避免其父元素出现滚动条，以免对话框和遮掩层能随其内容滚动。<br>当多个对话框有相同的父元素时，则视这些对话框为一组，一组对话框可以重叠显示。<br><ul><li>对话框的默认状态为关闭。因此 element 的 display 将被设置为 none。</li><li>当对话框元素的父元素为 body 元素时，其 position 才可以选择设置 absolute 或 fixed，其余情况均会被重设为 absolute。</li><li>建议为该元素设置明确的 zIndex，如果未设置 zIndex，则自动设置 zIndex 为 1000。</li><li>如果对话框元素的父元素的 position 为 static，将修改其 position 为 relative，以使其创建 stacking context。</li></ul>","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[{"description":"在对话框打开时触发。如果启用了动画效果，则在对话框打开动画开始播放的时候触发。","name":"open"},{"description":"在对话框关闭时触发。如果启用了动画效果，则在对话框关闭动画播放完毕的时候触发。","name":"close"}],"deprecated":"","examples":[],"isFunction":true,"name":"Dialog"},"Event.prototype.isKeyboardEvent":{"requires":[],"parameters":[],"isStatic":false,"description":"是否为键盘事件。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.isKeyboardEvent"},"Global.getNamespace":{"requires":[],"parameters":[{"description":"命名空间的字符串形式。","type":"string","name":"namespace","isOptional":false}],"isStatic":true,"description":"获取一个命名空间，如果该命名空间不存在，将创建并返回这个命名空间。","isConstructor":false,"returns":[{"type":"Object","description":"命名空间对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":["var finale = getNamespace('data.championship.finale');\rfinale.getRankingList = function() {...};"],"isFunction":true,"name":"Global.getNamespace"},"Element":{"requires":[],"parameters":[],"isStatic":true,"description":"为无 Element 构造函数的浏览器创建 Element 对象，以确保在各浏览器中都可以通过 Element.prototype 为元素扩展新特性。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element"},"String":{"requires":[],"parameters":[],"isStatic":true,"description":"","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"String"},"navigator.isIElt10":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 IE，且版本小于 10。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isIElt10"},"Fx.Base":{"requires":[],"parameters":[{"description":"动画处理函数，this 指向所属的 Animation 对象。","type":"Function","name":"handler","isOptional":false},{"description":"延时。","type":"number","name":"delay","isOptional":false},{"description":"播放时间。","type":"number","name":"duration","isOptional":false},{"description":"控速函数名称或表达式。","type":"string","name":"timingFunction","isOptional":false}],"isStatic":true,"description":"基础动画效果。<br>可以通过定制动画处理函数来制作各种动画，Fx 下的其他动画效果都是这样实现的。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Fx.Base"},"localStorage.clear":{"requires":[],"parameters":[],"isStatic":true,"description":"清空所有数据。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"localStorage.clear"},"Element.prototype.fadeOut":{"requires":[],"parameters":[{"description":"动画选项。","type":"Object","name":"options","isOptional":true},{"description":"播放时间，单位是毫秒，默认为 200。","type":"number","name":"options.duration","isOptional":false},{"description":"播放完成后的回调。","type":"Function","name":"options.callback","isOptional":false}],"isStatic":false,"description":"在本元素的动画队列中添加一个淡出效果。<br>当前并未被渲染的元素不能执行淡出效果。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.fadeOut"},"Switcher":{"requires":[],"parameters":[{"description":"指定在本数组中的各元素间切换，本数组包含的元素必须是引用类型的值，且不能有重复。","type":"Array","name":"items","isOptional":false}],"isStatic":true,"description":"使用一个数组创建切换控制器。在这个数组中，同一时刻最多只有一个元素是“活动”的。<br>高级应用：动态修改实例对象的 items 属性的内容，可以随时增加/减少切换控制器的控制范围。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[{"description":"{Element} activeItem 当前的活动元素。<br>{number} activeIndex 当前的活动元素在 items 中的索引。<br>{Element} inactiveItem 上一个活动元素。<br>{number} inactiveIndex 上一个活动元素在 items 中的索引。<br>在当前的活动元素改变时触发。","name":"change"}],"deprecated":"","examples":[],"isFunction":true,"name":"Switcher"},"navigator.inStandardsMode":{"requires":[],"parameters":[],"isStatic":true,"description":"是否工作在标准模式下。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.inStandardsMode"},"Date":{"requires":[],"parameters":[],"isStatic":true,"description":"","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Date"},"TabPanel.prototype.active":{"requires":[],"parameters":[{"description":"要激活的“标签面板”的“标签”元素，或者该元素在 tabs 中的索引值。<br>从 tabs 和 panels 中计算的，默认激活的某组“标签面板”的索引值从 0 开始。<br>如果指定的值为不在 tabs 中的对象，或为一个不在有效范索引围内的数字，则取消激活的“标签面板”。","type":"Object|number","name":"i","isOptional":false}],"isStatic":false,"description":"激活一组“标签面板”。","isConstructor":false,"returns":[{"type":"Object","description":"TabPanel 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"TabPanel.prototype.active"},"Animation.prototype.stop":{"requires":[],"parameters":[],"isStatic":false,"description":"停止动画，并将动画的时间点复位至起点。<br>如果当前动画的时间点在起点，则调用此方法无效。","isConstructor":false,"returns":[{"type":"Object","description":"Animation 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Animation.prototype.stop"},"window":{"requires":[],"parameters":[],"isStatic":true,"description":"扩展 DOMWindow 对象。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"window"},"Array.from":{"requires":[],"parameters":[{"description":"要转化为数组的对象。","type":"*","name":"arrayish","isOptional":false}],"isStatic":true,"description":"将类数组对象转化为数组，如果该对象不是一个类数组对象，则返回一个仅包含该对象的数组。","isConstructor":false,"returns":[{"type":"Array","description":"转化后的数组。"}],"type":"Array","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Array.from"},"Boolean":{"requires":[],"parameters":[],"isStatic":true,"description":"","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Boolean"},"Number.isInteger":{"requires":[],"parameters":[{"description":"提供的值。","type":"*","name":"value","isOptional":false}],"isStatic":true,"description":"检查提供的值是否为整数。","isConstructor":false,"returns":[{"type":"boolean","description":"检查结果。"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:number.isinteger"],"fires":[],"deprecated":"","examples":["Number.isInteger(9007199254740992);\r// false"],"isFunction":true,"name":"Number.isInteger"},"String.prototype.toJSON":{"requires":[],"parameters":[],"isStatic":false,"description":"将字符串转换为 JSON 格式的字符串。","isConstructor":false,"returns":[{"type":"string","description":"转换后的字符串。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"String.prototype.toJSON"},"Element.prototype.removeData":{"requires":[],"parameters":[{"description":"数据的名称，必须为 camelCase 形式，并且只能包含英文字母。","type":"string","name":"name","isOptional":false}],"isStatic":false,"description":"删除本元素附加的自定义数据。<br>注意：<br>IE6 IE7 在 removeAttribute 时，name 参数是大小写敏感的。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.removeData"},"window.getClientSize":{"requires":[],"parameters":[],"isStatic":true,"description":"获取视口可视区域的尺寸。<br>IE9 Firefox Chrome Safari Opera 有 window.innerWidth 和 window.innerHeight 属性，但这个值是包含了滚动条宽度的值。<br>为保持一致性，不使用这两个属性来获取文档可视区域尺寸。","isConstructor":false,"returns":[{"type":"Object","description":"尺寸，包含 width 和 height 两个数字类型的属性，单位为像素。"}],"type":"Object","since":"","see":["http://www.w3.org/TR/cssom-view/#dom-window-innerwidth","http://www.w3.org/TR/cssom-view/#dom-window-innerheight"],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"window.getClientSize"},"Element.prototype.morph":{"requires":[],"parameters":[{"description":"目标样式，元素将向指定的目标样式渐变。目标样式包含一条或多条要设置的样式声明，与 setStyles 的参数的差异如下：<br>1. 不能使用复合属性。  // TODO: 待支持。<br>2. lineHeight 仅支持 'px' 单位的长度设置，而不支持数字。","type":"Object","name":"styles","isOptional":false},{"description":"动画选项。","type":"Object","name":"options","isOptional":true},{"description":"延时，默认为 0，即马上开始播放。","type":"number","name":"options.delay","isOptional":false},{"description":"播放时间，单位是毫秒，默认为 400。","type":"number","name":"options.duration","isOptional":false},{"description":"控速函数名称或表达式。","type":"string","name":"options.timingFunction","isOptional":false},{"description":"播放完成后的回调。","type":"Function","name":"options.callback","isOptional":false}],"isStatic":false,"description":"在本元素的动画队列中添加一个渐变效果。<br>队列是指将需要较长时间完成的多个指令排序，以先进先出的形式逐个执行这些指令。<br>在元素上调用本方法添加动画时：<br>- 若该元素并未播放动画，新添加的动画会直接开始播放。<br>- 若该元素正在播放动画，新添加的动画将被添加到队列末端，在前一个动画播放完毕后自动播放。<br>一个元素对应一个队列。即给不同元素添加的动画永远有不同的队列，给相同元素添加的动画永远有相同的队列。<br>所有 Element.prototype 上提供的动画相关的方法均为实现动画的简单方式，它们只是一个捷径，可以解决大部分需求。若需要更复杂的动画效果，请考虑使用 Animation 对象实现。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.morph"},"Math":{"requires":[],"parameters":[],"isStatic":true,"description":"","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Math"},"Math.limit":{"requires":[],"parameters":[{"description":"输入的数字。","type":"number","name":"number","isOptional":false},{"description":"允许的数字下限。","type":"number","name":"min","isOptional":false},{"description":"允许的数字上限。","type":"number","name":"max","isOptional":false}],"isStatic":true,"description":"将输入数字限制于 min 和 max 之间（包含 min 和 max）。","isConstructor":false,"returns":[{"type":"number","description":"输出的数字。"}],"type":"number","since":"","see":["http://mootools.net/"],"fires":[],"deprecated":"","examples":["Math.limit(100, 0, 80);\r// 80\rMath.limit(NaN, 0, 80);\r// 0"],"isFunction":true,"name":"Math.limit"},"Animation.prototype.pause":{"requires":[],"parameters":[],"isStatic":false,"description":"暂停动画。<br>仅在动画处于“播放”或“反向播放”状态时，调用此方法才有效。","isConstructor":false,"returns":[{"type":"Object","description":"Animation 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Animation.prototype.pause"},"Math.randomRange":{"requires":[],"parameters":[{"description":"要获取的随机数的下限，整数。","type":"number","name":"min","isOptional":false},{"description":"要获取的随机数的上限，整数。","type":"number","name":"max","isOptional":false}],"isStatic":true,"description":"生成介于 min 和 max 之间（包含 min 和 max）的伪随机整数。","isConstructor":false,"returns":[{"type":"number","description":"生成的伪随机整数。"}],"type":"number","since":"","see":["http://mootools.net/"],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Math.randomRange"},"Request":{"requires":[],"parameters":[{"description":"请求地址。","type":"string","name":"url","isOptional":false},{"description":"可选参数，这些参数的默认值保存在 Request.options 中。","type":"Object","name":"options","isOptional":true},{"description":"用户名，默认为空字符串，即不指定用户名。","type":"string","name":"options.username","isOptional":false},{"description":"密码，默认为空字符串，即不指定密码。","type":"string","name":"options.password","isOptional":false},{"description":"请求方法，默认为 'get'。","type":"string","name":"options.method","isOptional":false},{"description":"要设置的 request headers，格式为 {key: value, ...} 的对象。","type":"Object","name":"options.headers","isOptional":false},{"description":"发送数据的内容类型，默认为 'application/x-www-form-urlencoded'，method 为 'post' 时有效。","type":"string","name":"options.contentType","isOptional":false},{"description":"是否允许浏览器的缓存生效，默认为 true。","type":"boolean","name":"options.useCache","isOptional":false},{"description":"是否使用异步方式，默认为 true。","type":"boolean","name":"options.async","isOptional":false},{"description":"请求最短时间，单位为 ms，默认为 NaN，即无最短时间限制，async 为 true 时有效。","type":"number","name":"options.minTime","isOptional":false},{"description":"请求超时时间，单位为 ms，默认为 NaN，即无超时时间限制，async 为 true 时有效。","type":"number","name":"options.maxTime","isOptional":false},{"description":"请求数据解析器，传入请求数据，该函数应返回处理后的字符串数据，默认将请求数据转换为字符串，若请求数据为空则转换为 null。","type":"Function","name":"options.requestParser","isOptional":false},{"description":"响应数据解析器，传入响应数据，该函数应返回处理后的响应数据，默认无特殊处理。","type":"Function","name":"options.responseParser","isOptional":false}],"isStatic":true,"description":"创建一个请求对象，用来对一个指定的资源发起请求，并获取响应数据。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[{"description":"在发送请求时触发。","name":"request"},{"description":"{number} status 状态码。<br>{string} statusText 状态描述。<br>{Object} headers 响应头。<br>{string} text 响应文本。<br>{XMLDocument} xml 响应 XML 文档。<br>在收到响应时触发。<br>在调用 abort 方法取消请求，或请求超时的情况下，也会收到响应数据。此时的状态码分别为 -498 和 -408。<br>换句话说，只要调用了 send 方法发起了请求，就必然会收到响应，虽然上述两种情况的响应并非是真实的来自于服务端的响应数据。<br>这样设计的好处是在请求结束时可以统一处理一些状态的设定或恢复，如将 request 事件监听器中显示的提示信息隐藏。","name":"response"}],"deprecated":"","examples":[],"isFunction":true,"name":"Request"},"Request.prototype.send":{"requires":[],"parameters":[{"description":"要发送的数据。","type":"Object","name":"data","isOptional":true}],"isStatic":false,"description":"发送请求。","isConstructor":false,"returns":[{"type":"Object","description":"request 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Request.prototype.send"},"location":{"requires":[],"parameters":[],"isStatic":true,"description":"扩展 location 对象。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"location"},"Element.prototype.getStyles":{"requires":[],"parameters":[{"description":"指定要获取的特性名，可以为任意个。","type":"Array","name":"propertyNames","isOptional":false}],"isStatic":false,"description":"获取本元素的“计算后的样式”中一组特性的值。","isConstructor":false,"returns":[{"type":"Object","description":"包含一组特性值的，格式为 {propertyName: propertyValue, ...} 的对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getStyles"},"Event.prototype.isPropagationStopped":{"requires":[],"parameters":[],"isStatic":false,"description":"事件的传递是否已被阻止。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.isPropagationStopped"},"Element.prototype.fire":{"requires":[],"parameters":[{"description":"事件类型。","type":"String","name":"type","isOptional":false},{"description":"在事件对象上附加的数据。<br>data 的属性会被追加到事件对象中，但名称为 originalEvent 的属性除外。","type":"Object","name":"data","isOptional":true}],"isStatic":false,"description":"触发本元素的某类事件，运行相关的事件监听器。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.fire"},"cookie.get":{"requires":[],"parameters":[{"description":"要读取的 cookie 名称。","type":"string","name":"name","isOptional":false}],"isStatic":true,"description":"读取 cookie。","isConstructor":false,"returns":[{"type":"string","description":"对应的值。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"cookie.get"},"Element.prototype.setStyles":{"requires":[],"parameters":[{"description":"包含一条或多条要设置的样式声明，格式为 {propertyName: propertyValue, ...} 的对象。","type":"Object","name":"declarations","isOptional":false}],"isStatic":false,"description":"为本元素设置一组行内样式声明。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.setStyles"},"Element.prototype.getParent":{"requires":[],"parameters":[],"isStatic":false,"description":"获取本元素的父元素。","isConstructor":false,"returns":[{"type":"Element","description":"本元素的父元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getParent"},"Pagination":{"requires":[],"parameters":[{"description":"要创建分页导航条的目标元素。","type":"Element","name":"element","isOptional":false},{"description":"可选参数。","type":"Object","name":"options","isOptional":true},{"description":"在导航条的两端显示的最多页码数量，默认为 1。","type":"number","name":"options.edgeEntries","isOptional":false},{"description":"在当前页码的两侧显示的最多页码数量，默认为 2。","type":"number","name":"options.sideEntries","isOptional":false},{"description":"向前翻页按钮的文字，默认为 '上一页'。","type":"string","name":"options.prevText","isOptional":false},{"description":"向后翻页按钮的文字，默认为 '下一页'。","type":"string","name":"options.nextText","isOptional":false}],"isStatic":true,"description":"根据当前页码和总页数创建分页导航条。<br>创建分页组件时使用的 DOM 结构如下：<br>向前翻页按钮 = A.prev<br>向后翻页按钮 = A.next<br>省略的页码 = SPAN<br>显示的页码 = A.number<br>高级应用：根据情况配置样式表，以满足各种需要。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[{"description":"{number} number 目标页码。<br>调用 turnTo 方法时触发。","name":"turn"}],"deprecated":"","examples":[],"isFunction":true,"name":"Pagination"},"Event.prototype.stopPropagation":{"requires":[],"parameters":[],"isStatic":false,"description":"阻止事件的传递，被阻止传递的事件将不会向其他元素传递。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Event.prototype.stopPropagation"},"Event.prototype.which":{"requires":[],"parameters":[],"isStatic":false,"description":"当一个设备触发事件时的相关代码。在键盘事件中为按下的键的代码。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.which"},"Event.prototype.shiftKey":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时，shift 键是否被按下。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.shiftKey"},"Array.prototype.indexOf":{"requires":[],"parameters":[{"description":"指定的值。","type":"*","name":"searchElement","isOptional":false},{"description":"在数组中的指定索引开始查找，默认为 0。<br>如果指定的值大于等于数组的长度，则仍使用数组的长度。<br>如果指定一个负数，则表示从数组的末尾开始计算的偏移量，即使用 fromIndex + length（数组的长度）作为查找起始点，如果这个结果仍为负数，则使用 0 作为最终结果。","type":"number","name":"fromIndex","isOptional":true}],"isStatic":false,"description":"返回数组中第一次出现指定的值的索引。","isConstructor":false,"returns":[{"type":"number","description":"索引值，如果数组中不包含指定的值，则返回 -1。"}],"type":"number","since":"","see":["http://es5.github.com/#x15.4.4.14","https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf"],"fires":[],"deprecated":"","examples":["[1, 2, 3, 2, 1].indexOf(2);\r// 1\r[1, 2, 3, 2, 1].indexOf(2, 2);\r// 3\r[1, 2, 3, 2, 1].indexOf(2, -3)\r// 3\r[1, 2, 3, 2, 1].indexOf(8)\r// -1"],"isFunction":true,"name":"Array.prototype.indexOf"},"Element.prototype.on":{"requires":[],"parameters":[{"description":"事件名称，包括事件类型和可选的别名，二者间用 . 分割。<br>使用空格分割多个事件名称，即可同时为多个事件注册同一个监听器（或为相同的后代元素代理多个事件）。","type":"string","name":"name","isOptional":false},{"description":"要添加的事件监听器。","type":"Function","name":"listener","isOptional":false},{"description":"为符合条件的后代元素代理事件。<br>要注意的是，在代理事件监听器中调用 e.stopPropagation 或 e.stopImmediatePropagation 时，事件对象实际上已经从触发对象传递到监听对象了。","type":"Function","name":"filter","isOptional":true}],"isStatic":false,"description":"为本元素添加事件监听器。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":["http://www.quirksmode.org/dom/events/index.html"],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.on"},"Object.forEach":{"requires":[],"parameters":[{"description":"要遍历的对象。","type":"Object","name":"object","isOptional":false},{"description":"用来遍历的函数，参数为 value，key，object。","type":"Function","name":"callback","isOptional":false},{"description":"遍历函数的 this 值。","type":"Object","name":"thisObj","isOptional":true}],"isStatic":true,"description":"遍历一个对象。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Object.forEach"},"String.prototype.contains":{"requires":[],"parameters":[{"description":"指定的子串。","type":"string","name":"subString","isOptional":false}],"isStatic":false,"description":"检查字符串是否包含指定的子串。","isConstructor":false,"returns":[{"type":"boolean","description":"检查结果。"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:string_extras"],"fires":[],"deprecated":"","examples":["'abcdefg'.contains('cd');\r// true"],"isFunction":true,"name":"String.prototype.contains"},"Element.prototype.putBefore":{"requires":[],"parameters":[{"description":"目标元素。","type":"Element","name":"target","isOptional":false}],"isStatic":false,"description":"将本元素放到目标元素之前。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.putBefore"},"Event.prototype.isDefaultPrevented":{"requires":[],"parameters":[],"isStatic":false,"description":"事件的默认行为是否已被阻止。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.isDefaultPrevented"},"Array.prototype.map":{"requires":[],"parameters":[{"description":"对数组中的每个元素都执行一次的回调函数。<br>回调函数有三个参数：当前元素，当前元素的索引和调用该方法的数组对象。","type":"Function","name":"callback","isOptional":false},{"description":"执行回调函数时 this 的值，如果省略或指定为 null，则使用全局对象 window。","type":"Object","name":"thisObject","isOptional":true}],"isStatic":false,"description":"对数组中的每一个元素都执行一次回调函数，并返回一个包含这个回调函数的每次执行后的返回值的新数组。","isConstructor":false,"returns":[{"type":"Array","description":"包含 callback 的每次执行后的返回值的新数组。"}],"type":"Array","since":"","see":["http://es5.github.com/#x15.4.4.19","https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map"],"fires":[],"deprecated":"","examples":["var a = [1, 2, 3].map(function(item) {\r  return item + 10;\r});\ra;\r// [11, 12, 13]"],"isFunction":true,"name":"Array.prototype.map"},"Global.runApplication":{"requires":[],"parameters":[{"description":"应用函数。","type":"Function","name":"applicationFunction","isOptional":false},{"description":"设置为 true 则在 DOM 树加载完成后再执行应用函数，否则立即执行。","type":"boolean","name":"waitingForDomReady","isOptional":true}],"isStatic":true,"description":"运行应用。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Global.runApplication"},"Dialog.prototype.close":{"requires":[],"parameters":[],"isStatic":false,"description":"关闭对话框。","isConstructor":false,"returns":[{"type":"Object","description":"Dialog 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Dialog.prototype.close"},"Event.prototype.altKey":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时，alt 键是否被按下。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.altKey"},"Element.prototype.getLastChild":{"requires":[],"parameters":[],"isStatic":false,"description":"获取本元素的最后一个子元素。","isConstructor":false,"returns":[{"type":"Element","description":"本元素的最后一个子元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getLastChild"},"Component":{"requires":[],"parameters":[{"description":"组件的构造函数。","type":"Function","name":"constructor","isOptional":false},{"description":"组件的默认选项。","type":"Object","name":"defaultOptions","isOptional":false},{"description":"组件的原型对象。","type":"Object","name":"prototype","isOptional":false}],"isStatic":true,"description":"创建一个组件。<br>组件的实例及其原型对象中都不能设置以下属性：<br>'options'，'events'，'setOptions'，'on'，'off'，'fire'。<br>修改各组件的默认选项时，不要修改 XXX.options 的指向。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Component"},"Element.prototype.prependChild":{"requires":[],"parameters":[{"description":"目标元素。","type":"Element","name":"target","isOptional":false}],"isStatic":false,"description":"将目标元素追加为本元素的第一个子元素。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.prependChild"},"String.prototype.repeat":{"requires":[],"parameters":[{"description":"要重复的次数。","type":"number","name":"count","isOptional":false}],"isStatic":false,"description":"将字符串重复指定的次数。","isConstructor":false,"returns":[{"type":"string","description":"重复指定次数后的字符串。"}],"type":"string","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:string.prototype.repeat"],"fires":[],"deprecated":"","examples":["'*'.repeat(5);\r// '*****'"],"isFunction":true,"name":"String.prototype.repeat"},"Event":{"requires":[],"parameters":[{"description":"原始事件对象。","type":"Object","name":"e","isOptional":false},{"description":"事件类型。","type":"string","name":"type","isOptional":false}],"isStatic":true,"description":"事件包装对象。<br>当事件对象通过调用 Element/document/window 的 fire 方法传递到监听器时，其属性可能会被重写。<br>在一些需要获取浏览器提供的真实事件属性时，可以通过事件对象的 originalEvent.type 属性来辨别事件的真实类型，由上述 fire 方法生成的事件对象的对应属性为空字符串。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Event"},"window.getScrollSize":{"requires":[],"parameters":[],"isStatic":true,"description":"获取视口滚动区域的尺寸。当内容不足以充满视口可视区域时，返回视口可视区域的尺寸。","isConstructor":false,"returns":[{"type":"Object","description":"尺寸，包含 width 和 height 两个数字类型的属性，单位为像素。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"window.getScrollSize"},"window.on":{"requires":[],"parameters":[{"description":"事件名称。参考 Element.prototype.on 的同名参数。","type":"string","name":"name","isOptional":false},{"description":"要添加的事件监听器。","type":"Function","name":"listener","isOptional":false},{"description":"为符合条件的子元素代理事件。","type":"Function","name":"filter","isOptional":true}],"isStatic":true,"description":"为 window 添加事件监听器。<br>特殊事件：beforeunload<br><ul><li>该事件只能存在一个监听器，因此不能使用别名。</li><li>不会有事件对象作为参数传入监听器。</li><li>如果添加了多个监听器，则只有最后添加的生效。</li><li>可以删除当前生效的监听器。</li></ul>","isConstructor":false,"returns":[{"type":"Object","description":"window 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"window.on"},"navigator.userAgentInfo.name":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器名称，值为以下之一：IE|Firefox|Chrome|Safari|Opera。","isConstructor":false,"returns":[],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.userAgentInfo.name"},"cookie.set":{"requires":[],"parameters":[{"description":"要设置的 cookie 名称。","type":"string","name":"name","isOptional":false},{"description":"要设置的 cookie 名称对应的值。","type":"string","name":"value","isOptional":false},{"description":"可选参数。","type":"Object","name":"options","isOptional":true},{"description":"限定生效的路径，默认为当前路径。","type":"string","name":"options.path","isOptional":false},{"description":"限定生效的域名，默认为当前域名。","type":"string","name":"options.domain","isOptional":false},{"description":"是否仅通过 SSL 连接 (HTTPS) 传输 cookie，默认为否。","type":"boolean","name":"options.secure","isOptional":false},{"description":"过期时间。","type":"Date","name":"options.expires","isOptional":false}],"isStatic":true,"description":"设置 cookie。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"cookie.set"},"Request.prototype.abort":{"requires":[],"parameters":[],"isStatic":false,"description":"取消请求，仅在 Request 设置为异步模式时可用。","isConstructor":false,"returns":[{"type":"Object","description":"request 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Request.prototype.abort"},"Dialog.prototype.open":{"requires":[],"parameters":[],"isStatic":false,"description":"打开对话框。","isConstructor":false,"returns":[{"type":"Object","description":"Dialog 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Dialog.prototype.open"},"Date.prototype.toJSON":{"requires":[],"parameters":[],"isStatic":false,"description":"将日期转换为 JSON 格式的字符串。","isConstructor":false,"returns":[{"type":"string","description":"转换后的字符串。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Date.prototype.toJSON"},"Element.prototype.getFirstChild":{"requires":[],"parameters":[],"isStatic":false,"description":"获取本元素的第一个子元素。","isConstructor":false,"returns":[{"type":"Element","description":"本元素的第一个子元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getFirstChild"},"Element.prototype.appendChild":{"requires":[],"parameters":[{"description":"目标元素。","type":"Element","name":"target","isOptional":false}],"isStatic":false,"description":"将目标元素追加为本元素的最后一个子元素。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.appendChild"},"window.getPageOffset":{"requires":[],"parameters":[],"isStatic":true,"description":"获取视口的滚动偏移量。<br>一些浏览器支持 window.scrollX/window.scrollY 或 window.pageXOffset/window.pageYOffset 直接获取视口的滚动偏移量。<br>这里使用通用性更强的方法实现。","isConstructor":false,"returns":[{"type":"Object","description":"坐标，包含 x 和 y 两个数字类型的属性，单位为像素。"}],"type":"Object","since":"","see":["http://w3help.org/zh-cn/causes/BX9008"],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"window.getPageOffset"},"Element.prototype.getChildCount":{"requires":[],"parameters":[],"isStatic":false,"description":"获取本元素的子元素的总数。","isConstructor":false,"returns":[{"type":"number","description":"本元素的子元素的总数。"}],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getChildCount"},"Array.prototype.every":{"requires":[],"parameters":[{"description":"用来检查的回调函数。<br>回调函数有三个参数：当前元素，当前元素的索引和调用该方法的数组对象。<br>回调函数返回 true 表示当前元素通过检查，反之表示未通过检查。","type":"Function","name":"callback","isOptional":false},{"description":"执行回调函数时 this 的值，如果省略或指定为 null，则使用全局对象 window。","type":"Object","name":"thisObject","isOptional":true}],"isStatic":false,"description":"检查数组中的所有元素是否都符合某个条件。","isConstructor":false,"returns":[{"type":"boolean","description":"检查结果。"}],"type":"boolean","since":"","see":["http://es5.github.com/#x15.4.4.16","https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/every"],"fires":[],"deprecated":"","examples":["[1, 2, 3].every(function(item) {\r  return item < 5;\r});\r// true"],"isFunction":true,"name":"Array.prototype.every"},"location.parameters":{"requires":[],"parameters":[],"isStatic":true,"description":"获取当前页面的 Query String 中携带的所有参数。<br>注意：<br>当地址栏的字符有非 ASCII 字符，或有非法的查询字符串时，会有兼容性问题。","isConstructor":false,"returns":[],"type":"Object","since":"","see":["http://w3help.org/zh-cn/causes/HD9001"],"fires":[],"deprecated":"","examples":["// 设页面地址为 test.html?a=ok&b=100&b=128\rlocation.parameters\r// {a:'ok', b:['100', '128']}"],"isFunction":false,"name":"location.parameters"},"Animation.prototype.reverse":{"requires":[],"parameters":[],"isStatic":false,"description":"反向播放动画。<br>如果当前动画的时间点在起点，则调用此方法无效。","isConstructor":false,"returns":[{"type":"Object","description":"Animation 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Animation.prototype.reverse"},"Component.prototype.setOptions":{"requires":[],"parameters":[{"description":"选项。","type":"Object","name":"options","isOptional":false}],"isStatic":false,"description":"为本组件设置选项。","isConstructor":false,"returns":[{"type":"Object","description":"本组件。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Component.prototype.setOptions"},"Request.options":{"requires":[],"parameters":[],"isStatic":true,"description":"默认选项。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Request.options"},"Date.now":{"requires":[],"parameters":[],"isStatic":true,"description":"获取系统当前的时间戳。","isConstructor":false,"returns":[{"type":"number","description":"系统当前的时间戳。"}],"type":"number","since":"","see":["http://es5.github.com/#x15.9.4.4"],"fires":[],"deprecated":"","examples":["Date.now() === new Date().getTime();\r// true"],"isFunction":true,"name":"Date.now"},"Number.prototype.padZero":{"requires":[],"parameters":[{"description":"数字总位数（包括整数位和小数位），当数字实际位数小于指定的数字总位数时，会在左侧补零。","type":"number","name":"digits","isOptional":false}],"isStatic":false,"description":"在数字左侧补零，以使数字更整齐。","isConstructor":false,"returns":[{"type":"string","description":"补零后的数字、NaN、Infinity 或 -Infinity 的字符形式。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Number.prototype.padZero"},"Component.prototype.fire":{"requires":[],"parameters":[{"description":"事件类型。","type":"String","name":"type","isOptional":false},{"description":"在事件对象上附加的数据。","type":"Object","name":"data","isOptional":true}],"isStatic":false,"description":"触发本组件的某类事件，运行相关的事件监听器。","isConstructor":false,"returns":[{"type":"Object","description":"本组件。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Component.prototype.fire"},"Element.prototype.getClientRect":{"requires":[],"parameters":[],"isStatic":false,"description":"获取本元素的 border-box 在视口中的坐标。<br>注意：<br>不考虑非标准模式。<br>标准模式下 IE7(IE9 模拟) 的 body 的计算样式 direction: rtl 时，如果 html 设置了边框，则横向坐标获取仍不准确。由于极少出现这种情况，此处未作处理。","isConstructor":false,"returns":[{"type":"Object","description":"包含位置（left、right、top、bottom）及尺寸（width、height）的对象，所有属性值均为 number 类型，单位为像素。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getClientRect"},"Event.prototype.stopImmediatePropagation":{"requires":[],"parameters":[],"isStatic":false,"description":"立即阻止事件的传递，被立即阻止传递的事件不仅不会向其他元素传递，也不会在当前元素上触发其他事件监听器。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Event.prototype.stopImmediatePropagation"},"TabPanel":{"requires":["Switcher"],"parameters":[{"description":"包含所有“标签”的数组。","type":"Array","name":"tabs","isOptional":false},{"description":"包含所有“面板”的数组，应确保 panels 的数量和 tabs 的数量一致。","type":"Array","name":"panels","isOptional":false},{"description":"可选参数。","type":"Object","name":"options","isOptional":true},{"description":"为激活的“标签”和“面板”添加的类名，默认为 'active'。","type":"string","name":"options.activeClassName","isOptional":false},{"description":"用来绑定各“标签”的代理事件监听器的元素。当所有的“标签”有一个共同的父元素时，可以省略，此时使用第一个“标签”的父元素。","type":"Element","name":"options.tabsContainer","isOptional":false},{"description":"以毫秒为单位的鼠标悬停激活延时，默认为 NaN，此时由鼠标点击事件激活。若要启用鼠标悬停激活，建议设置为 200 - 400 之间的数值。","type":"number","name":"options.hoverDelay","isOptional":false}],"isStatic":true,"description":"根据已有的一系列 DOM 元素创建多页标签面板。<br>“标签”和“面板”必须是按顺序一一对应，保存在参数 tabs 和 panels 中。<br>一个“标签”和一个“面板”组成一组“标签面板”。<br>同一时刻最多只有一组“标签面板”被激活。<br>高级应用：在创建一个实例后，可以动态修改 tabPanel.tabs 和 tabPanel.panels，动态添加/删除“标签面板”组，但要确保新增加的“标签”与原有“标签”的在 DOM 树的位置层次是相同的。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[{"description":"{Element} activeTab 当前的激活的“标签”。<br>{Element} activePanel 当前的激活的“面板”。<br>{number} activeIndex 当前的激活的“标签”和“面板”在 tabs 和 panels 中的索引。<br>{Element} inactiveTab 上一个激活的“标签”。<br>{Element} inactivePanel 上一个激活的“面板”。<br>{number} inactiveIndex 上一个激活的“标签”和“面板”在 tabs 和 panels 中的索引。<br>在激活的“标签”和“面板”改变时触发。","name":"change"}],"deprecated":"","examples":[],"isFunction":true,"name":"TabPanel"},"Object.append":{"requires":[],"parameters":[{"description":"原始对象。","type":"Object","name":"original","isOptional":false},{"description":"追加对象，其 properties 会被复制到 original 中。","type":"Object","name":"appending","isOptional":false},{"description":"过滤要复制的 appending 的 properties 的名单。","type":"Object","name":"filter","isOptional":true},{"description":"仅在 appending 中的 key 包含于 whiteList 时，对应的 property 才会被复制到 original 中。","type":"Array","name":"filter.whiteList","isOptional":false},{"description":"如果 appending 中的 key 包含于 blackList，则对应的 property 不会被复制到 original 中。<br>如果 blackList 与 whiteList 有重复元素，则 whiteList 中的该元素将被忽略。","type":"Array","name":"filter.blackList","isOptional":false}],"isStatic":true,"description":"为一个对象追加另一个对象自身（不包含原型链）的 properties。<br>appending 中的 property 会覆盖 original 中的同名 property。<br><table><tr><th>original (before)</th><th>appending</th><th>original (after)</th></tr><tr><td>a: 'a.0'</td><td></td><td>a: 'a.0'</td></tr><tr><td>b: 'b.0'</td><td>b: 'b.1'</td><td>b: 'b.1'</td></tr><tr><td></td><td>c: 'c.1'</td><td>c: 'c.1'</td></tr></table>","isConstructor":false,"returns":[{"type":"Object","description":"追加后的 original 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":["var original = {a: 'a.0'};\rvar appending = {b: 'b.1'};\rJSON.stringify(Object.append(original, appending));\r// {\"a\":\"a.0\",\"b\":\"b.1\"}","var original = {a: 'a.0', b: 'b.0', c: 'c.0'};\rvar appending = {a: 'a.1', b: 'b.1', c: 'c.1'};\rJSON.stringify(Object.append(original, appending, {whiteList: ['a', 'b']}));\r// {\"a\":\"a.1\",\"b\":\"b.1\",\"c\":\"c.0\"}\rJSON.stringify(Object.append(original, appending, {whiteList: ['a', 'b'], blackList: ['b', 'c']}));\r// {\"a\":\"a.1\",\"b\":\"b.0\",\"c\":\"c.0\"}"],"isFunction":true,"name":"Object.append"},"Animation.options":{"requires":[],"parameters":[],"isStatic":true,"description":"默认选项。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Animation.options"},"Number":{"requires":[],"parameters":[],"isStatic":true,"description":"","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Number"},"Element.prototype.remove":{"requires":[],"parameters":[{"description":"是否保留本元素及后代元素上绑定的所有事件监听器。","type":"boolean","name":"keepListeners","isOptional":true}],"isStatic":false,"description":"将本元素从文档树中删除。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.remove"},"Component.prototype.on":{"requires":[],"parameters":[{"description":"事件名称，包括事件类型和可选的别名，二者间用 . 分割。<br>使用空格分割多个事件名称，即可同时为多个事件注册同一个监听器。","type":"string","name":"name","isOptional":false},{"description":"要添加的事件监听器。","type":"Function","name":"listener","isOptional":false}],"isStatic":false,"description":"为本组件添加事件监听器。","isConstructor":false,"returns":[{"type":"Object","description":"本组件。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Component.prototype.on"},"navigator.userAgentInfo.engine":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器渲染引擎的类型，值为以下之一：Trident|WebKit|Gecko|Presto。","isConstructor":false,"returns":[],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.userAgentInfo.engine"},"Element.prototype.getStyle":{"requires":[],"parameters":[{"description":"特性名，支持 camel case 和 hyphenate 格式。","type":"string","name":"propertyName","isOptional":false}],"isStatic":false,"description":"获取本元素的“计算后的样式”中某个特性的值。<br>注意：<br>不要尝试获取复合属性的值，它们存在兼容性问题。<br>不要尝试获取未插入文档树的元素的“计算后的样式”，它们存在兼容性问题。","isConstructor":false,"returns":[{"type":"string","description":"对应的特性值，如果获取的是长度值，其单位未必是 px，可能是其定义时的单位。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getStyle"},"Array.prototype.filter":{"requires":[],"parameters":[{"description":"对数组中的每个元素都执行一次的回调函数。<br>回调函数有三个参数：当前元素，当前元素的索引和调用该方法的数组对象。","type":"Function","name":"callback","isOptional":false},{"description":"执行回调函数时 this 的值，如果省略或指定为 null，则使用全局对象 window。","type":"Object","name":"thisObject","isOptional":true}],"isStatic":false,"description":"对数组中的每一个元素都执行一次回调函数，并且创建一个新的数组，该数组包含所有回调函数执行后返回值为 true 时对应的原数组元素。","isConstructor":false,"returns":[{"type":"Array","description":"包含所有回调函数执行后返回值为 true 时对应的原数组元素的新数组。"}],"type":"Array","since":"","see":["http://es5.github.com/#x15.4.4.20","https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter"],"fires":[],"deprecated":"","examples":["var a = [1, 2, 3].filter(function(item) {\r  return item % 2 === 1;\r});\ra;\r// [1, 3]"],"isFunction":true,"name":"Array.prototype.filter"},"Element.prototype.innerText":{"requires":[],"parameters":[],"isStatic":false,"description":"获取/设置本元素内的文本信息。<br>注意：<br>getter 在遇到 br 元素或换行符时，各浏览器行为不一致。","isConstructor":false,"returns":[],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Element.prototype.innerText"},"Component.prototype.off":{"requires":[],"parameters":[{"description":"通过 on 添加监听器时使用的事件名称。可以使用空格分割多个事件名称。","type":"string","name":"name","isOptional":false}],"isStatic":false,"description":"根据名称删除本组件上已添加的事件监听器。","isConstructor":false,"returns":[{"type":"Object","description":"本组件。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Component.prototype.off"},"Switcher.prototype.active":{"requires":[],"parameters":[{"description":"要标记为“活动”的元素，或者这个元素在 items 中的索引值。<br>要标记为“活动”的元素不能为当前的活动元素。<br>如果指定的值为不在 items 中的对象，或为一个不在有效范索引围内的数字，则取消活动元素。","type":"Object|number","name":"i","isOptional":false}],"isStatic":false,"description":"将一个元素标记为“活动”，并将当前的活动元素（如果有）标记为“非活动”。","isConstructor":false,"returns":[{"type":"Object","description":"Switcher 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Switcher.prototype.active"},"navigator.isSafari":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 Safari。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isSafari"},"navigator.userAgentInfo.version":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器的版本号。","isConstructor":false,"returns":[],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.userAgentInfo.version"},"Element.prototype.off":{"requires":[],"parameters":[{"description":"通过 on 添加监听器时使用的事件名称。可以使用空格分割多个事件名称。","type":"string","name":"name","isOptional":false}],"isStatic":false,"description":"根据名称删除本元素上已添加的事件监听器。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.off"},"document.off":{"requires":[],"parameters":[{"description":"通过 on 添加监听器时使用的事件名称。可以使用空格分割多个事件名称。","type":"string","name":"name","isOptional":false}],"isStatic":true,"description":"根据名称删除 document 上已添加的事件监听器。","isConstructor":false,"returns":[{"type":"Object","description":"document 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"document.off"},"Event.prototype.wheelUp":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标滚轮是否正在向上滚动，仅在 mousewheel 类型的事件对象上有效。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.wheelUp"},"Event.prototype.type":{"requires":[],"parameters":[],"isStatic":false,"description":"事件类型。","isConstructor":false,"returns":[],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.type"},"navigator.isOpera":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 Opera。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isOpera"},"Number.prototype.toJSON":{"requires":[],"parameters":[],"isStatic":false,"description":"将数字转换为 JSON 格式的字符串。","isConstructor":false,"returns":[{"type":"string","description":"转换后的字符串。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Number.prototype.toJSON"},"Fx.Highlight":{"requires":[],"parameters":[{"description":"要实施渐隐效果的元素。","type":"Element","name":"$element","isOptional":false},{"description":"高亮的颜色。","type":"string","name":"color","isOptional":false},{"description":"高亮的次数。","type":"number","name":"times","isOptional":false},{"description":"延时。","type":"number","name":"delay","isOptional":false},{"description":"播放时间。","type":"number","name":"duration","isOptional":false},{"description":"控速函数名称或表达式。","type":"string","name":"timingFunction","isOptional":false}],"isStatic":true,"description":"高亮效果。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Fx.Highlight"},"String.prototype.endsWith":{"requires":[],"parameters":[{"description":"指定的子串。","type":"string","name":"subString","isOptional":false}],"isStatic":false,"description":"检查字符串是否以指定的子串结束。","isConstructor":false,"returns":[{"type":"boolean","description":"检查结果。"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:string_extras"],"fires":[],"deprecated":"","examples":["'abcdefg'.endsWith('a');\r// false"],"isFunction":true,"name":"String.prototype.endsWith"},"String.prototype.toArray":{"requires":[],"parameters":[],"isStatic":false,"description":"将字符串转化为数组。","isConstructor":false,"returns":[{"type":"Array","description":"从字符串转化的数组。"}],"type":"Array","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:string_extras"],"fires":[],"deprecated":"","examples":["'abcdefg'.toArray();\r// ['a', 'b', 'c', 'd', 'e', 'f', 'g']"],"isFunction":true,"name":"String.prototype.toArray"},"Event.prototype.isImmediatePropagationStopped":{"requires":[],"parameters":[],"isStatic":false,"description":"事件的传递是否已被立即阻止。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.isImmediatePropagationStopped"},"document.fire":{"requires":[],"parameters":[{"description":"事件类型。","type":"String","name":"type","isOptional":false},{"description":"在事件对象上附加的数据。","type":"Object","name":"data","isOptional":true}],"isStatic":true,"description":"触发 document 的某类事件，运行相关的事件监听器。","isConstructor":false,"returns":[{"type":"Object","description":"document 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"document.fire"},"Element.prototype.outerText":{"requires":[],"parameters":[],"isStatic":false,"description":"获取本元素内的文本信息，或使用文本信息替换本元素。<br>注意：<br>getter 在遇到 br 元素或换行符时，各浏览器行为不一致。<br>setter 在特殊元素上调用时（如 body）各浏览器行为不一致。<br>与 innerText 不同，如果设置一个元素的 outerText，那么设置的字符串将作为文本节点替换本元素在文档树中的位置。","isConstructor":false,"returns":[],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Element.prototype.outerText"},"Object.clone":{"requires":[],"parameters":[{"description":"原始对象。","type":"Object","name":"source","isOptional":false},{"description":"是否进行深克隆。","type":"boolean","name":"recursive","isOptional":true}],"isStatic":true,"description":"克隆一个对象，返回克隆后的新对象。<br>原型链中的 properties 不会被克隆。","isConstructor":false,"returns":[{"type":"Object","description":"克隆后的新对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Object.clone"},"Event.prototype.middleButton":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时，鼠标中键是否被按下，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.middleButton"},"Animation.prototype.play":{"requires":[],"parameters":[],"isStatic":false,"description":"播放动画。<br>如果当前动画的时间点在终点，则调用此方法无效。","isConstructor":false,"returns":[{"type":"Object","description":"Animation 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Animation.prototype.play"},"String.prototype.clean":{"requires":[],"parameters":[],"isStatic":false,"description":"合并本字符串中的空白字符，并去掉首尾的空白字符。","isConstructor":false,"returns":[{"type":"string","description":"清理后的字符串。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":["' a b  c   d    e     f      g       '.clean();\r// 'a b c d e f g'"],"isFunction":true,"name":"String.prototype.clean"},"Global.declareModule":{"requires":[],"parameters":[{"description":"模块 id。","type":"string","name":"id","isOptional":false},{"description":"模块函数。","type":"Function","name":"moduleFunction","isOptional":false},{"description":"设置为 true 则在 DOM 树加载完成后再执行模块函数，否则立即执行。","type":"boolean","name":"waitingForDomReady","isOptional":true}],"isStatic":true,"description":"声明模块。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Global.declareModule"},"Event.prototype.wheelDown":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标滚轮是否正在向下滚动，仅在 mousewheel 类型的事件对象上有效。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.wheelDown"},"Switcher.prototype.getActiveIndex":{"requires":[],"parameters":[],"isStatic":false,"description":"获取当前标记为“活动”的元素的索引。","isConstructor":false,"returns":[{"type":"number","description":"当前标记为“活动”的元素的索引，如果为 NaN，则当前无活动元素。"}],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Switcher.prototype.getActiveIndex"},"Calendar.options":{"requires":[],"parameters":[],"isStatic":true,"description":"默认选项。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Calendar.options"},"navigator.isFirefox":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 Firefox。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isFirefox"},"JSON":{"requires":[],"parameters":[],"isStatic":true,"description":"JSON 对象。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"JSON"},"document.on":{"requires":[],"parameters":[{"description":"事件名称。参考 Element.prototype.on 的同名参数。","type":"string","name":"name","isOptional":false},{"description":"要添加的事件监听器。","type":"Function","name":"listener","isOptional":false},{"description":"为符合条件的子元素代理事件。","type":"Function","name":"filter","isOptional":true}],"isStatic":true,"description":"为 document 添加事件监听器。<br>特殊事件：domready<br><ul><li>在文档可用时触发，只能添加监听器，不能删除监听器，因此不能使用别名。</li><li>不会有事件对象作为参数传入监听器。</li><li>如果在此事件触发后添加此类型的监听器，这个新添加的监听器将立即运行。</li></ul>","isConstructor":false,"returns":[{"type":"Object","description":"document 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"document.on"},"Array":{"requires":[],"parameters":[],"isStatic":true,"description":"","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Array"},"Calendar.prototype.render":{"requires":[],"parameters":[{"description":"字符串表示的日期，格式为 yyyy-MM-dd。","type":"string","name":"dateString","isOptional":false}],"isStatic":false,"description":"渲染指定年/月份的日历。","isConstructor":false,"returns":[{"type":"Calendar","description":"Calendar 对象。"}],"type":"Calendar","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Calendar.prototype.render"},"navigator.isChrome":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 Chrome。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isChrome"},"Fx.Morph":{"requires":[],"parameters":[{"description":"要实施渐变效果的元素。","type":"Element","name":"$element","isOptional":false},{"description":"要实施渐变的样式。支持相对长度值和颜色值，其中相对长度值目前仅支持像素单位，颜色值支持 140 个预命名颜色名称、#RRGGBB 格式、#RGB 格式或 rgb(正整数R, 正整数G, 正整数B) 格式。","type":"Object","name":"styles","isOptional":false},{"description":"延时。","type":"number","name":"delay","isOptional":false},{"description":"播放时间。","type":"number","name":"duration","isOptional":false},{"description":"控速函数名称或表达式。","type":"string","name":"timingFunction","isOptional":false}],"isStatic":true,"description":"渐变效果。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Fx.Morph"},"JSON.stringify":{"requires":[],"parameters":[{"description":"要转换的 ECMAScript 值，通常是 Object 或 Array 类型的数据，也可以是 String、Boolean、Number、Date 类型的数据或者 null。","type":"*","name":"value","isOptional":false},{"description":"用来过滤的函数或数组。<br>如果是函数，则传入 key 和 value，并使用其返回值替换 value，若返回 undefined，则忽略该 key。<br>如果是数组，则该数组只能包含字符串，本方法会仅对 key 出现在数组中的部分进行转换。","type":"Function|Array","name":"replacer","isOptional":true},{"description":"为使 JSON 字符串更易读而在每行内容之前加入的前缀。<br>如果是字符串，则直接加入这个字符串作为前缀。若字符串的长度超过 10，则仅保留前 10 个字符。<br>如果是数字，则加入对应数目的空格符。若数字大于 10，则只使用 10 个空格符。<br>如果未指定该值，或者该值为 '' 或 0，则 JSON 字符串不会换行（全部内容在一行内）。","type":"string|number","name":"space","isOptional":true}],"isStatic":true,"description":"将 ECMAScript 值转换为 JSON 格式的字符串。","isConstructor":false,"returns":[{"type":"string","description":"转换后的字符串。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"JSON.stringify"},"Event.prototype.clientX":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标在视口中的 X 坐标，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.clientX"},"Event.prototype.clientY":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标在视口中的 Y 坐标，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.clientY"},"Event.prototype.ctrlKey":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时，ctrl 键是否被按下。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.ctrlKey"},"Event.prototype.leftButton":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时，鼠标左键是否被按下，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.leftButton"},"String.prototype.startsWith":{"requires":[],"parameters":[{"description":"指定的子串。","type":"string","name":"subString","isOptional":false}],"isStatic":false,"description":"检查字符串是否以指定的子串开始。","isConstructor":false,"returns":[{"type":"boolean","description":"检查结果。"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:string_extras"],"fires":[],"deprecated":"","examples":["'abcdefg'.startsWith('a');\r// true"],"isFunction":true,"name":"String.prototype.startsWith"},"Calendar":{"requires":[],"parameters":[{"description":"可选参数，这些参数的默认值保存在 Calendar.options 中。","type":"Object","name":"options","isOptional":true},{"description":"是否按照标准顺序排列日期。设置为 true 按照“周日 - 周六”的顺序排列，否则按照“周一 - 周日”的顺序排列。","type":"boolean","name":"options.useStandardSequence","isOptional":false},{"description":"主题样式，即创建的最外层 DOM 元素的 className。","type":"string","name":"options.theme","isOptional":false},{"description":"最小日期，格式为 yyyy-mm-dd，默认为 1900-01-01。","type":"string","name":"options.minDate","isOptional":false},{"description":"最大日期，格式为 yyyy-mm-dd，默认为 2100-12-31。","type":"string","name":"options.maxDate","isOptional":false},{"description":"选定日期，格式为 yyyy-mm-dd。","type":"string","name":"options.date","isOptional":false}],"isStatic":true,"description":"日历选择组件。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[{"description":"{string} date 选定的日期，格式为 yyyy-mm-dd 的字符串。<br>选定日期后触发。","name":"select"}],"deprecated":"","examples":[],"isFunction":true,"name":"Calendar"},"document.preloadImages":{"requires":[],"parameters":[{"description":"包含需预加载的图片路径的数组。","type":"Array","name":"urlArray","isOptional":false}],"isStatic":true,"description":"预加载图片。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"document.preloadImages"},"cookie.remove":{"requires":[],"parameters":[{"description":"要删除的 cookie 名称。","type":"string","name":"name","isOptional":false},{"description":"可选参数。","type":"Object","name":"options","isOptional":true},{"description":"限定生效的路径，默认为当前路径。","type":"string","name":"options.path","isOptional":false},{"description":"限定生效的域名，默认为当前域名。","type":"string","name":"options.domain","isOptional":false},{"description":"是否仅通过 SSL 连接 (HTTPS) 传输 cookie，默认为否。","type":"boolean","name":"options.secure","isOptional":false}],"isStatic":true,"description":"删除 cookie。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"cookie.remove"},"Array.isArray":{"requires":[],"parameters":[{"description":"提供的值。","type":"*","name":"value","isOptional":false}],"isStatic":true,"description":"检查提供的值是否为数组。","isConstructor":false,"returns":[{"type":"boolean","description":"检查结果。"}],"type":"boolean","since":"","see":["http://es5.github.com/#x15.4.3.2","https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray"],"fires":[],"deprecated":"","examples":["Array.isArray([]);\r// true"],"isFunction":true,"name":"Array.isArray"},"Element.prototype.fadeIn":{"requires":[],"parameters":[{"description":"动画选项。","type":"Object","name":"options","isOptional":true},{"description":"播放时间，单位是毫秒，默认为 200。","type":"number","name":"options.duration","isOptional":false},{"description":"播放完成后的回调。","type":"Function","name":"options.callback","isOptional":false}],"isStatic":false,"description":"在本元素的动画队列中添加一个淡入效果。<br>当前已被渲染的元素不能执行淡入效果。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.fadeIn"},"Array.prototype.getLast":{"requires":[],"parameters":[],"isStatic":false,"description":"获取本数组的最后一个元素。","isConstructor":false,"returns":[{"type":"*","description":"本数组的最后一个元素。"}],"type":"*","since":"","see":[],"fires":[],"deprecated":"","examples":["[0, 1, 2, 3, 4].getLast();\r// 4"],"isFunction":true,"name":"Array.prototype.getLast"},"Element.prototype.empty":{"requires":[],"parameters":[],"isStatic":false,"description":"将本元素的内容清空，并删除本元素及后代元素上绑定的所有事件监听器。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.empty"},"Event.prototype.metaKey":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时，meta 键是否被按下。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.metaKey"},"Event.prototype.originalEvent":{"requires":[],"parameters":[],"isStatic":false,"description":"原始事件对象。","isConstructor":false,"returns":[],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.originalEvent"},"document.head":{"requires":[],"parameters":[],"isStatic":true,"description":"获取文档的 head 元素。<br>与 document.documentElement 和 document.body 的作用一样，document.head 是获取文档的 head 元素的快捷方式。","isConstructor":false,"returns":[],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":["document.documentElement === document.getElementsByTagName('html')[0];\r// true\rdocument.head === document.getElementsByTagName('head')[0];\r// true\rdocument.body === document.getElementsByTagName('body')[0];\r// true"],"isFunction":false,"name":"document.head"},"Dialog.options":{"requires":[],"parameters":[],"isStatic":true,"description":"默认选项。<br>可选参数对象，包含的属性及其默认值为：<br><table><tr><th>maskAttributes</th><td>{}</td></tr><tr><th>maskStyles</th><td>{backgroundColor: '#000', opacity: 0.2}</td></tr><tr><th>offsetX</th><td>NaN</td></tr><tr><th>offsetY</th><td>NaN</td></tr><tr><th>effect</th><td>false</td></tr></table>","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Dialog.options"},"navigator.userAgentInfo":{"requires":[],"parameters":[],"isStatic":true,"description":"从 navigator.userAgent 中提取的常用信息。<br>注意：<br>navigator.userAgentInfo 下的三个属性是根据 navigator.userAgent 得到的，仅供参考使用，不建议用在代码逻辑判断中。","isConstructor":false,"returns":[],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.userAgentInfo"},"Element.prototype":{"requires":[],"parameters":[],"isStatic":true,"description":"可以通过扩展本对象来为页面中的所有元素扩展新特性。<br>注意：<br>受 IE6 IE7 实现方式的限制，扩展新特性应在获取元素之前进行，否则已获取的元素将无法访问新扩展的特性。","isConstructor":false,"returns":[],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":["Element.prototype.getNodeName = function() {\r  return this.nodeName;\r};\r$(document.head).getNodeName();\r// HEAD"],"isFunction":false,"name":"Element.prototype"},"Array.prototype.some":{"requires":[],"parameters":[{"description":"用来检查的回调函数。<br>回调函数有三个参数：当前元素，当前元素的索引和调用该方法的数组对象。<br>回调函数返回 true 表示当前元素通过检查，反之表示未通过检查。","type":"Function","name":"callback","isOptional":false},{"description":"执行回调函数时 this 的值，如果省略或指定为 null，则使用全局对象 window。","type":"Object","name":"thisObject","isOptional":true}],"isStatic":false,"description":"检查数组中是否有任一元素符合某个条件。","isConstructor":false,"returns":[{"type":"boolean","description":"检查结果。"}],"type":"boolean","since":"","see":["http://es5.github.com/#x15.4.4.17","https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/some"],"fires":[],"deprecated":"","examples":["[1, 2, 3].some(function(item) {\r  return item === 2;\r});\r// true"],"isFunction":true,"name":"Array.prototype.some"},"Event.prototype.relatedTarget":{"requires":[],"parameters":[],"isStatic":false,"description":"事件被触发时的相关对象，仅在 mouseover/mouseout 类型的事件对象上有效。","isConstructor":false,"returns":[],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.relatedTarget"},"document":{"requires":[],"parameters":[],"isStatic":true,"description":"扩展 document 对象。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"document"},"JSON.parse":{"requires":[],"parameters":[{"description":"要转换的 JSON 格式的字符串。","type":"string","name":"text","isOptional":false},{"description":"用来过滤的函数。传入 key 和 value，将使用其返回值替换 value。","type":"Function","name":"reviver","isOptional":true}],"isStatic":true,"description":"将 JSON 格式的字符串转换为 ECMAScript 值。","isConstructor":false,"returns":[{"type":"*","description":"转换后的 ECMAScript 值。"}],"type":"*","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"JSON.parse"},"Object.keys":{"requires":[],"parameters":[{"description":"要获取键列表的对象。","type":"Object","name":"object","isOptional":false}],"isStatic":true,"description":"获取对象的键列表。","isConstructor":false,"returns":[{"type":"Array","description":"对象的键列表。"}],"type":"Array","since":"","see":["http://es5.github.com/#x15.2.3.14","https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys","http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation"],"fires":[],"deprecated":"","examples":["Object.keys({a: 97, b: 98, c: 99});\r// ['a', 'b', 'c']"],"isFunction":true,"name":"Object.keys"},"Array.prototype.contains":{"requires":[],"parameters":[{"description":"指定的元素。","type":"*","name":"element","isOptional":false}],"isStatic":false,"description":"检查本数组中是否包含指定的元素。","isConstructor":false,"returns":[{"type":"boolean","description":"检查结果。"}],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":["[0, 1, 2, 3, 4].contains(2);\r// true"],"isFunction":true,"name":"Array.prototype.contains"},"Element.prototype.getData":{"requires":[],"parameters":[{"description":"数据的名称，必须为 camelCase 形式，并且只能包含英文字母。","type":"string","name":"name","isOptional":false}],"isStatic":false,"description":"获取本元素附加的自定义数据。<br>注意：<br>Chrome 在 dataset 中不存在名称为 name 的值时，返回空字符串，Firefox Safari Opera 返回 undefined。此处均返回 undefined。","isConstructor":false,"returns":[{"type":"string","description":"数据的值。"}],"type":"string","since":"","see":["http://www.w3.org/TR/2011/WD-html5-20110525/elements.html#embedding-custom-non-visible-data-with-the-data-attributes"],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getData"},"Array.prototype.forEach":{"requires":[],"parameters":[{"description":"对数组中的每个元素都执行一次的回调函数。<br>回调函数有三个参数：当前元素，当前元素的索引和调用该方法的数组对象。","type":"Function","name":"callback","isOptional":false},{"description":"执行回调函数时 this 的值，如果省略或指定为 null，则使用全局对象 window。","type":"Object","name":"thisObject","isOptional":true}],"isStatic":false,"description":"遍历数组，对数组中的每一个元素都执行一次指定的函数。","isConstructor":false,"returns":[],"type":"","since":"","see":["http://es5.github.com/#x15.4.4.18","https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/array/forEach"],"fires":[],"deprecated":"","examples":["var s = '';\r[1, 2, 3].forEach(function(item) {\r  s += item;\r});\rs;\r// 123"],"isFunction":true,"name":"Array.prototype.forEach"},"Element.prototype.removeClass":{"requires":[],"parameters":[{"description":"类名。","type":"string","name":"className","isOptional":false}],"isStatic":false,"description":"为本元素删除一个类名。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.removeClass"},"Element.prototype.toggleClass":{"requires":[],"parameters":[{"description":"类名。","type":"string","name":"className","isOptional":false}],"isStatic":false,"description":"为本元素添加一个类名（如果本元素没有这个类名）或删除一个类名（如果本元素有这个类名）。","isConstructor":false,"returns":[{"type":"Element","description":"本元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.toggleClass"},"Animation.prototype.addClip":{"requires":[],"parameters":[{"description":"使用 Fx.* 创建的动画剪辑对象。","type":"Object","name":"clip","isOptional":false}],"isStatic":false,"description":"添加动画剪辑。","isConstructor":false,"returns":[{"type":"Object","description":"Animation 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Animation.prototype.addClip"},"Global.execute":{"requires":[],"parameters":[{"description":"包含要执行的代码块的匿名函数。","type":"Function","name":"codeBlock","isOptional":false},{"description":"设置为 true 则在 DOM 树加载完成后再执行代码块，否则立即执行。","type":"boolean","name":"waitingForDomReady","isOptional":true}],"isStatic":true,"description":"执行代码块。<br>通常，为了减少全局变量的数量和避免不同代码块之间的变量名有冲突，会使用一个匿名函数来执行一个相对独立的代码块：<br><pre>(function() {...})();</pre>使用本方法可以达到相同目的，除此之外还有以下好处：<br><ul><li>原匿名函数的第一个参数将被传入 document.$，因此可以通过在该匿名函数的形参中写上一个 $，以便在函数内直接使用 $ 而不必担心与其他脚本库的 $ 冲突。</li><li>的可选参数 waitingForDomReady 可以控制这个匿名函数的执行时机（如何设置这个参数取决于代码块内是否有依赖 DOM 元素的操作）。</li></ul>","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":["execute(function($){...});\r// 在匿名函数中可以使用 $ 代替 document.$。","execute(function($){...}, true);\r// 匿名函数将在 DOM 树加载完成后执行。"],"isFunction":true,"name":"Global.execute"},"Element.prototype.comparePosition":{"requires":[],"parameters":[{"description":"目标元素。","type":"Element","name":"target","isOptional":false}],"isStatic":false,"description":"比较本元素和目标元素在文档树中的位置关系。  // TODO: 高级用法，标记为 master。<br>调用本方法后返回的 number 值的含义：<br><table><tr><th>Bits</th><th>Number</th><th>Meaning</th></tr><tr><td>000000</td><td>0</td><td>节点 A 与节点 B 相等</td></tr><tr><td>000001</td><td>1</td><td>节点 A 与节点 B 在不同的文档（或者一个在文档之外）</td></tr><tr><td>000010</td><td>2</td><td>节点 B 在节点 A 之前</td></tr><tr><td>000100</td><td>4</td><td>节点 A 在节点 B 之前</td></tr><tr><td>001000</td><td>8</td><td>节点 B 包含节点 A</td></tr><tr><td>010000</td><td>16</td><td>节点 A 包含节点 B</td></tr><tr><td>100000</td><td>32</td><td>浏览器的私有使用</td></tr></table>","isConstructor":false,"returns":[{"type":"number","description":"比较结果。"}],"type":"number","since":"","see":["http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-compareDocumentPosition","http://ejohn.org/blog/comparing-document-position/"],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.comparePosition"},"Event.prototype.screenX":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标在屏幕上的 X 坐标，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.screenX"},"Event.prototype.screenY":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标在屏幕上的 Y 坐标，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.screenY"},"Animation":{"requires":[],"parameters":[],"isStatic":true,"description":"创建动画效果。<br>高级应用：<br>向一个动画中添加多个剪辑，并调整每个剪辑的 delay，duration，timingFunction 参数，以实现复杂的动画效果。<br>仅应在动画初始化时（播放之前）添加影片剪辑，不要在开始播放后添加或更改影片剪辑。<br>在 step 事件监听器中访问 this.timePoint 可以获得当前帧所处的时间点。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[{"description":"开始播放时，渲染本次播放的第一帧之前触发。","name":"play"},{"description":"开始播放时，渲染整个动画的第一帧之前触发。","name":"playstart"},{"description":"播放结束时，渲染整个动画的最后一帧之后触发。","name":"playfinish"},{"description":"开始反向播放时，渲染本次播放的第一帧之前触发。","name":"reverse"},{"description":"开始反向播放时，渲染整个动画的第一帧之前触发。","name":"reversestart"},{"description":"反向播放结束时，渲染整个动画的最后一帧之后触发。","name":"reversefinish"},{"description":"渲染每一帧之后触发。","name":"step"},{"description":"暂停播放时触发。","name":"pause"},{"description":"停止播放时触发。","name":"stop"}],"deprecated":"","examples":[],"isFunction":true,"name":"Animation"},"Switcher.options":{"requires":[],"parameters":[],"isStatic":true,"description":"默认选项。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Switcher.options"},"navigator":{"requires":[],"parameters":[],"isStatic":true,"description":"扩展 navigator 对象，提供更多关于浏览器的信息。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator"},"Event.prototype.bubbles":{"requires":[],"parameters":[],"isStatic":false,"description":"是否可以冒泡，不冒泡的事件不能使用事件代理。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.bubbles"},"navigator.isIElt8":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 IE，且版本小于 8。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isIElt8"},"localStorage.getItem":{"requires":[],"parameters":[{"description":"要读取的数据名，不能为空字符串。","type":"string","name":"key","isOptional":false}],"isStatic":true,"description":"读取数据。","isConstructor":false,"returns":[{"type":"string","description":"对应的值。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"localStorage.getItem"},"navigator.isIElt9":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 IE，且版本小于 9。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isIElt9"},"Fx":{"requires":[],"parameters":[],"isStatic":true,"description":"用于创建影片剪辑的一组特效。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Fx"},"cookie":{"requires":[],"parameters":[],"isStatic":true,"description":"提供操作 cookie 的常用方法。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"cookie"},"Pagination.prototype.turnTo":{"requires":[],"parameters":[{"description":"目标页码。","type":"number","name":"number","isOptional":false}],"isStatic":false,"description":"跳转页码。","isConstructor":false,"returns":[{"type":"Object","description":"Pagination 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Pagination.prototype.turnTo"},"Number.toInteger":{"requires":[],"parameters":[{"description":"提供的值。","type":"*","name":"value","isOptional":false}],"isStatic":true,"description":"将提供的值转化为整数。","isConstructor":false,"returns":[{"type":"number","description":"转化结果。"}],"type":"number","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:number.tointeger"],"fires":[],"deprecated":"","examples":["Number.toInteger([10.75]);\r// 10\rNumber.toInteger('10px');\r// 0"],"isFunction":true,"name":"Number.toInteger"},"Event.prototype.rightButton":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时，鼠标右键是否被按下，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.rightButton"}};