function parseColor(color) {
  var value = parseInt(color.substring(1), 16);
  return {
    r: (value & 0xff0000) >> 16,
    g: (value & 0xff00) >> 8,
    b: value & 0xff
  };
}









  /**
   * 省略某部分内容以达到要求，内容被省略的元素会被加入 title 属性，其值为其进行省略处理前的内容。
   * @param {Element} targetElement 可以进行内容省略处理的元素，其内容只能是文本，不能有其他 HTML 代码。
   * @param {Function} fitTester 判断是否符合既定要求的函数，返回 true 为符合，false 则要继续进行省略处理。谨慎设计此函数，本功能未做防止进入死循环的处理。
   * @param {?number} minLengthAssert 最短长度断言，即 targetElement 包含该数目的字符时必定不会导致 fitTester 函数的返回值为 false。
   * @param {?string} ellipsisText 省略符。
   */
  ellipsisToFit: function(targetElement, fitTester, minLengthAssert, ellipsisText) {
    if (fitTester()) {
      return;
    }
    minLengthAssert = minLengthAssert || 1;
    ellipsisText = ellipsisText || '...';
    var text = $(targetElement).text();
    var fitText = targetElement.innerHTML = '';
    while (fitTester()) {
      fitText = targetElement.innerHTML;
      targetElement.innerHTML = text.slice(0, minLengthAssert++) + ellipsisText;
    }
    targetElement.innerHTML = fitText;
    targetElement.title = text;
  },
  getFormattedGoldText: function(gold) {
    var goldText = '';
    var charactors = gold.toString().split('');
    var newCharactors = [];
    var i = charactors.length;
    var n = 0;
    while (i--) {
      n++;
      if (n === 5) {
        newCharactors.unshift('万');
      } else if (n === 9) {
        newCharactors.unshift('亿');
      }
      newCharactors.unshift(charactors[i]);
    }
    goldText = newCharactors.join('');
    if (goldText.slice(-4) === '0000') {
      goldText = goldText.slice(0, -4);
    }
    if (goldText.slice(-5) === '0000万') {
      goldText = goldText.slice(0, -5);
    }
    return goldText;
  }
};






























// 为 IE6 IE7 IE8 IE9 添加 placeholder 支持。
//if ('ActiveXObject' in window) {
//  $('input[type=text][placeholder]').each(function() {
//    console.log(this.name);
//  });
//}

//var $title = $('#title')[0];
//$title.ondragenter = function() {
//  this.value = '123';
//};
//$title.ondragleave = function() {
//  this.value = '';
//};

/**************************************************
 * 为 INPUT[type=text] 添加 placeholder。
 **************************************************/
jQuery.fn.extend({addPlaceholder: function(placeholder) {
  if ($.trim(this.val()) === '') {
    this.addClass('c-placeholder');
    this.val(placeholder);
  }
  this.focus(function() {
    if ($(this).hasClass('c-placeholder')) {
      $(this).removeClass('c-placeholder');
      this.value = '';
    }
  });
  this.blur(function() {
    if ($.trim(this.value) === '') {
      $(this).addClass('c-placeholder');
      this.value = placeholder;
    }
  });
  return this;
}});
